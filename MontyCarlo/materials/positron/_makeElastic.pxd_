cimport cython

from MontyCarlo.tools.interpol1 cimport LinLinInterpolation


from MontyCarlo.tools cimport CubicInverseTransform

        


cdef class FastCubicSpline:
    cdef int N
    cdef double[:] x
    cdef double[:, :] c 
    cdef double _eval(self, double x)
    

    
    

cdef class sFastCubicSpline:
    cdef double dx
    cdef int N
    cdef double y
    cdef Py_ssize_t fr
    cdef double[:] x
    cdef double[:, :] c
    cdef int[:, :] lims
    cdef double r
         
        
        
        

        
        
    cdef double sample(self)
    cdef double sample_rc(self, double rc)
    
    
    
    cdef double _eval_rc(self, double rc)
        
        
    cdef double _eval(self, double x)
    
    cdef double _evalINDEX(self, Py_ssize_t i, double x)
        
 
    
    
    
    
    


from numpy cimport ndarray


cdef class sampler:
    cdef sFastCubicSpline[::1] samplers
    cdef double[::1] logE
    
    cdef LinLinInterpolation SIGMA0, SIGMA1, SIGMA2
    cdef LinLinInterpolation[::1] T1, T2
    
    cdef double [::1] E
    cdef int En
        
    cdef double sample(self, double E, double rc)
    cpdef (double, double) T(self, double E, double rc)
      

