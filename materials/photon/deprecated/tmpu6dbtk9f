# cython: profile=True

#External Imports

#Internal Imports
from ...tools.RITA import RationalInterpolation

# from .coherent.coherent                   import Coherent
# from .incoherent.incoherent               import Incoherent
# from .photoelectric.photoelectric         import Photoelectric
# from .pairproduction.pairproduction       import Pairproduction
# from .tripletproduction.tripletproduction import Tripletproduction



class Photon:
	"""
	DATA BASE DOC: https://www-nds.iaea.org/epics/DOCUMENTS/ENDL2002.pdf
	"""
	def __init__(self, formula, density):

		self.coherent          = Coherent          (formula, density)
		self.incoherent        = Incoherent        (formula, density)
		self.photoelectric     = Photoelectric     (formula, density)
		self.pairproduction    = Pairproduction    (formula, density)
		self.tripletproduction = Tripletproduction (formula, density)


class CSLOGIC:
    def __init__(self, ID, formula, density):
        
        from . import CrossSection
        self.mfp = CrossSection.getMFP(ID, formula, density)

class Coherent(CSLOGIC):
    def __init__(self, formula, density):
        super().__init__((7, 71, 0, 0, 0, 0), formula, density)
        
        from .coherent import FormFactor
        self.FF = FormFactor.composeFF(formula)
        self.FF = RationalInterpolation(self.FF, 0, 300**2, True)

class Incoherent(CSLOGIC):
    def __init__(self, formula, density):
        super().__init__((7, 72, 0, 0, 0, 0), formula, density)
        
        from .incoherent import IncoherentFormFactor
        
        self.S = IncoherentFormFactor.composeIFF(formula, density)
   
class Photoelectric(CSLOGIC):
    def __init__(self, formula, density):
        super().__init__((7, 73, 0, 0, 0, 0), formula, density)

class Pairproduction(CSLOGIC):
    def __init__(self, formula, density):
        super().__init__((7, 74, 0, 0, 0, 0), formula, density)

class Tripletproduction(CSLOGIC):
    def __init__(self, formula, density):
        super().__init__((7, 75, 0, 0, 0, 0), formula, density)



















